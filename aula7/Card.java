/**
* Auxiliary class of Deck and Poker main class. 
* @author Auto generated by NASA.
*/
class Card{
	static final byte naipeNum = 4;
	static final byte valueNum = 13;
	private int naipe;
	private int value;

	/**
	* Create a card, with a naipe ranging from 0 to 3 (no semantic value imposed, at first) 
	* and a value equals to (newValue + 1), if newValue higher than 0, and 13 (max value) otherwise.
	* @Thrown IllegalArgumentException, if NewNaipe is out of [0, 4) range and/or newValue is out of [0, 13).
	*/
	public Card(int newNaipe, int newValue) throws IllegalArgumentException{
		if (newNaipe >= 0 && newNaipe < naipeNum){
			if (newValue >= 0 && newValue < valueNum){
				naipe = newNaipe;
				//Value starts from 0 and ends in 12. The true card value is newValue + 1 (e.g if newValue = 1, then value is 2).
				//This will turn the display a lot easier.
				//The special case, A (newValue = 0), actually has a true value of 13 (higher than the other cards).
				value = (newValue > 0 ? (newValue + 1) : valueNum);
			}
			throw new IllegalArgumentException("The card Value must be a integer on range, [0, " + valueNum + ").");
		}
		throw new IllegalArgumentException("The card Naipe must be a integer, [0, " + naipeNum + ").");
	}

	public static void main(String[] args) {
		//Debug hell
	}
}